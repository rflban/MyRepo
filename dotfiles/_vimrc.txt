" For kitty (correct background rendring)
let &t_ut=''

" Turn off vi support
set nocompatible

"" Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'ervandew/supertab'
Plugin 'airblade/vim-gitgutter'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'raimondi/delimitmate'
Plugin 'andymass/vim-matchup'
Plugin 'vim-scripts/a.vim'
Plugin 'godlygeek/tabular'
Plugin 'kshenoy/vim-signature'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'vim-scripts/mru.vim'

Plugin 'sheerun/vim-polyglot'
Plugin 'justinmk/vim-syntax-extra'

Plugin 'joshdick/onedark.vim'
Plugin 'dikiaap/minimalist'
Plugin 'cseelus/vim-colors-lucid'
Plugin 'nightsense/vimspectr'

call vundle#end()
filetype plugin indent on

"if (has("autocmd"))
  "augroup colors
    "autocmd!
    "let s:background = { "gui": "#1E2127", "cterm": "235", "cterm16": "0" }
    "autocmd ColorScheme * call onedark#set_highlight("Normal", { "bg": s:background }) "No `fg` setting
  "augroup END
"endif

" Highlighting
syntax enable
set background=dark
colorscheme lucid

highlight Comment cterm=italic
highlight String cterm=italic
highlight Operator cterm=italic
highlight Statement cterm=italic

highlight PreProc cterm=bold
highlight PreCondit cterm=bold

" Show typing commands in status-bar
set showcmd
" Show rows number
set number
" Highlight cur row
"set cursorline
" Default encoding
set termencoding=utf8

" Do not redraw after any not typed event. For speed boost
"set lazyredraw

"display text width column
"set colorcolumn=81
"new splits will be at the bottom or to the right side of the screen
set splitbelow
set splitright

"" Search
" Ignore letter case
set ic
" Highlight search
set hls
" Searh while typing
set is

" Mouse support
set mouse=a
set mousemodel=popup

"" Indents
" Turn off line wrap
set nowrap
set autoindent
" For exmaple, after '{'
set smartindent
" Tab len
set tabstop=4

set softtabstop=4
" Indent len
set shiftwidth=4
" Tab to spaces
set expandtab
" Exceptiom for makefiles
au FileType make set noexpandtab

" Vertical split screen separator
set fillchars+=vert:â”‚ " U+2502

" Visual instead of sound bell
set visualbell

" Left offset for sign like ycm's or syntastic's `>>`
set signcolumn=yes

" NERDtree
nnoremap <silent> <F2> :NERDTreeToggle <bar> AirlineRefresh<CR>

" Nerdcommenter
let g:NERDCustomDelimiters = { 'c': { 'left': '/* ', 'right': ' */' } }

"" Airline
" Don't show current mode in defualt status-bar
set noshowmode
let g:airline_theme = 'transparent'
" Tabs
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline#extensions#tabline#right_sep = ''
let g:airline#extensions#tabline#right_alt_sep = ''
" Status-bar
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''

" Match-up status bar disappearing fix. https://github.com/andymass/vim-matchup/issues/21
let g:matchup_matchparen_status_offscreen = 0

" Enable true color https://github.com/tmux/tmux/issues/1246
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

